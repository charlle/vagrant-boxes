ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'
Vagrant.require_version ">= 1.6.0"

Vagrant.configure("2") do |config|
  config.ssh.forward_agent = true

# CONFIGURE HOSTMANAGER
# 
# manage pretty url writing
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true


  # CONFIGURE WEB SERVER (nginx)
  # 
  # set hostname, network, and aliases
    config.vm.define "node", primary: true do |node|
      node.vm.box = "charlle/node"
      node.vm.box_version = "1.0"
      node.ssh.username = "vagrant"
      node.vm.hostname = "node"
      node.vm.network :private_network, ip: '192.168.42.51'
      node.vm.network :forwarded_port, guest: 1234, host: 1234

    # SYNC FOLDERS 
    # 
    # node should be in /var/...
    # sync local with vm folders
      node.vm.synced_folder "app/", "/var/app/", type: "nfs"
      node.vm.synced_folder "app/config/", "/etc/nginx/sites-available/", type: "nfs"

    # PRETTY URL
    #
    # set pretty url
      node.hostmanager.aliases = %w(node)
    
    # SET RESOURCES
    #
    # box must have min 256MB and 25% CPU
    # set provider
      node.vm.provider "virtualbox" do |vb|
        vb.customize ["modifyvm", :id, "--cpuexecutioncap", "25"]
        vb.memory = "256"
        vb.cpus = "1"
      end

    # START UP NGINX
    #  
    # restart nginx on guest after up
      node.trigger.after :up do
        run_remote "sudo service nginx restart"
        run_remote "sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u vagrant --hp /home/vagrant"
        run_remote "sudo pm2 start /var/app/app.js"
      end
    end
  #
  # END WEB SERVER (nginx)


# VAGRANT MESSAGE
  config.vm.post_up_message = "You're Node Server is Ready!"
end
